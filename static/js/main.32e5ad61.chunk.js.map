{"version":3,"sources":["components/home/Home.js","components/navbar/Navbar.js","components/products/ProductList.js","components/products/ProductAdmin.js","components/products/CreateProduct.js","components/products/UpdateProduct.js","App.js","serviceWorker.js","index.js"],"names":["Home","Fragment","className","Navbar","to","ProductList","useState","products","setProducts","setErrorMessage","useEffect","Axios","get","then","response","data","catch","err","length","map","product","key","_id","src","image","alt","width","height","name","price","toFixed","qty","ProductAdmin","getProducts","deleteProduct","productId","dataURL","delete","substr","onClick","bind","colSpan","CreateProduct","history","useHistory","info","setProduct","submitted","setSubmitted","changeInput","event","target","value","changeImage","a","imageFile","files","reader","FileReader","readAsDataURL","addEventListener","result","alert","push","onSubmit","preventDefault","post","required","onChange","type","placeholder","id","htmlFor","rows","style","marginBottom","UpdateProduct","useParams","selectedProduct","setSelectedProduct","put","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.32e5ad61.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet Home = () => {\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"landing-page\">\r\n                <div className=\"wrapper\">\r\n                    <div className=\"d-flex flex-column text-center justify-content-center align-items-center h-100\">\r\n                        <h2 className=\"display-3 animated slideInDown\">\r\n                            <i className=\"fa fa-shopping-cart\"/> BigBasket</h2>\r\n                        <p className=\"lead px-3 animated slideInUp\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet assumenda doloremque ea eaque, eligendi eos eum exercitationem laboriosam libero odit porro provident quia quidem sed similique suscipit voluptatem voluptatibus, voluptatum?</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nlet Navbar = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navbar navbar-dark bg-success navbar-expand-sm\">\r\n                <div className=\"container\">\r\n                    <Link to='/' className=\"navbar-brand\">\r\n                        <i className=\"fa fa-shopping-cart\"/> BigBasket</Link>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/' className=\"nav-link\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/products' className=\"nav-link\">Products</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to='/admin' className=\"nav-link\">Admin</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default Navbar;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nlet ProductList = () => {\r\n    let [products , setProducts] = useState([]);\r\n    let [errorMessage , setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products`;\r\n        Axios.get(dataURL).then((response) => {\r\n            setProducts(response.data);\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    }, []);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row animated slideInLeft\">\r\n                    <div className=\"col\">\r\n                        <p className=\"h3 text-success\">Products Page</p>\r\n                        <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum nesciunt officiis perspiciatis quam voluptate. Alias consequuntur est ipsam iure modi mollitia placeat, ut voluptatem? Dolorem doloribus illo nihil odit veniam.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row animated zoomIn delay-1s\">\r\n                    {\r\n                        products.length > 0 ?\r\n                            <React.Fragment>\r\n                                {\r\n                                    products.map((product) => {\r\n                                        return (\r\n                                            <div key={product._id} className=\"col-md-3\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header text-center bg-white\">\r\n                                                        <img src={product.image} alt=\"\" width=\"150\" height=\"150\"/>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\">\r\n                                                        <ul className=\"list-group\">\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Name : {product.name}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Price : &#8377; {product.price.toFixed(2)}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Qty : {product.qty} Kgs\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </React.Fragment> : <React.Fragment>\r\n                                <div>\r\n                                    <p className=\"h5 text-danger text-center\">---------------------------------------------------- No Products Available ----------------------------------------------------</p>\r\n                                </div>\r\n                            </React.Fragment>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default ProductList;","import React, {useEffect, useState} from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport Axios from \"axios\";\r\n\r\nlet ProductAdmin = () => {\r\n    let [products , setProducts] = useState([]);\r\n    let [errorMessage , setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n    }, []);\r\n\r\n    // get all the products\r\n    let getProducts = () => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products`;\r\n        Axios.get(dataURL).then((response) => {\r\n            setProducts(response.data)\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    };\r\n\r\n    // delete Product\r\n    let deleteProduct = (productId) => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n        Axios.delete(dataURL).then((response) => {\r\n            getProducts();\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row animated slideInLeft\">\r\n                    <div className=\"col\">\r\n                        <p className=\"h3 text-success\">Products Details</p>\r\n                        <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorum nesciunt officiis perspiciatis quam voluptate. Alias consequuntur est ipsam iure modi mollitia placeat, ut voluptatem? Dolorem doloribus illo nihil odit veniam.</p>\r\n                        <Link to=\"/create-product\" className=\"btn btn-success btn-sm\">Create Product</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-3 animated zoomIn delay-1s\">\r\n                    <div className=\"col\">\r\n                        <table className=\"table table-hover text-center table-striped table-success\">\r\n                            <thead className=\"bg-dark text-white\">\r\n                            <tr>\r\n                                <th>SNO</th>\r\n                                <th>Product</th>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Qty</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                products.length > 0 ?\r\n                                    <React.Fragment>\r\n                                        {\r\n                                            products.map((product) => {\r\n                                                return (\r\n                                                    <tr key={product._id}>\r\n                                                        <td>{product._id.substr(product._id.length - 4)}</td>\r\n                                                        <td>\r\n                                                            <img src={product.image} alt=\"\" width=\"70\" height=\"70\"/>\r\n                                                        </td>\r\n                                                        <td>{product.name}</td>\r\n                                                        <td>&#8377;{product.price.toFixed(2)}</td>\r\n                                                        <td>{product.qty} Kgs</td>\r\n                                                        <td>\r\n                                                            <Link to={`/update-product/${product._id}`} className=\"btn btn-secondary btn-sm text-white\">Update</Link>\r\n                                                            <button onClick={deleteProduct.bind(this, product._id)} className=\"btn btn-danger btn-sm text-white\">Delete</button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </React.Fragment> : <React.Fragment>\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-danger font-weight-bold\">------------- No Products Available ------------ </td>\r\n                                        </tr>\r\n                                    </React.Fragment>\r\n                            }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default ProductAdmin;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nlet CreateProduct = () => {\r\n    let history = useHistory();\r\n    let [product , setProduct] = useState({\r\n        name : '',\r\n        image : '',\r\n        price : '',\r\n        qty : '',\r\n        info : ''\r\n    });\r\n    let [submitted , setSubmitted] = useState(false);\r\n    let [errorMessage , setErrorMessage] = useState('');\r\n\r\n    // changeInput\r\n    let changeInput = (event) => {\r\n        setProduct({\r\n            ...product,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    // changeImage\r\n    let changeImage = async (event) => {\r\n        let imageFile = event.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(imageFile);\r\n        reader.addEventListener('load', () => {\r\n            if(reader.result){\r\n                setProduct({\r\n                    ...product,\r\n                    image : reader.result\r\n                });\r\n            }\r\n            else {\r\n                alert('Error Occurred');\r\n            }\r\n        });\r\n    };\r\n\r\n    // submitProduct\r\n    let submitProduct = (event) => {\r\n        event.preventDefault();\r\n        let dataURL = `http://127.0.0.1:5000/api/products/`;\r\n        Axios.post(dataURL , product).then((response) => {\r\n            setSubmitted(true);\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                submitted ? history.push('/admin') :\r\n                    <div className=\"landing-page\">\r\n                        <div className=\"wrapper\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row animated slideInLeft\">\r\n                            <div className=\"col\">\r\n                                <p className=\"h3 text-success\">Create a Product</p>\r\n                                <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aut,\r\n                                    in placeat? Aperiam aspernatur aut doloribus, est fugiat harum impedit molestias\r\n                                    non nulla perferendis, porro quae veniam veritatis voluptas voluptate\r\n                                    voluptates.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row animated flipInY delay-1s\">\r\n                            <div className=\"col-md-5\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header bg-dark text-white\">\r\n                                        <p className=\"h4\">Create Product</p>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <form onSubmit={submitProduct}>\r\n                                            <div className=\"form-group\">\r\n                                                <input required\r\n                                                       name=\"name\"\r\n                                                       value={product.name}\r\n                                                       onChange={changeInput}\r\n                                                       type=\"text\" className=\"form-control\"\r\n                                                       placeholder=\"Product Name\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"custom-file\">\r\n                                                    <input required\r\n                                                           onChange={changeImage}\r\n                                                           type=\"file\" className=\"custom-file-input\"\r\n                                                           id=\"customFile\"/>\r\n                                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">Product\r\n                                                        Image</label>\r\n                                                    {\r\n                                                        product.image &&\r\n                                                        <img src={product.image} alt=\"\" width=\"20\"\r\n                                                             height=\"20\"/>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input required\r\n                                                       name=\"price\"\r\n                                                       value={product.price}\r\n                                                       onChange={changeInput}\r\n                                                       type=\"number\" className=\"form-control\" placeholder=\"Price\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input required\r\n                                                       name=\"qty\"\r\n                                                       value={product.qty}\r\n                                                       onChange={changeInput}\r\n                                                       type=\"number\" className=\"form-control\"\r\n                                                       placeholder=\"Available Qty\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                            <textarea required\r\n                                                      name=\"info\"\r\n                                                      value={product.info}\r\n                                                      onChange={changeInput}\r\n                                                      className=\"form-control\" rows=\"3\" placeholder=\"General Info\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"submit\" className=\"btn btn-dark btn-sm\"\r\n                                                       value=\"Create Product\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div style={{marginBottom : '100px'}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default CreateProduct;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Axios from \"axios\";\r\n\r\nlet UpdateProduct = () => {\r\n    let history = useHistory();\r\n    let [productId , setProductId] = useState(useParams().id);\r\n    let [selectedProduct , setSelectedProduct] = useState({\r\n        name : '',\r\n        image : '',\r\n        price : '',\r\n        qty : '',\r\n        info : ''\r\n    });\r\n    let [submitted , setSubmitted] = useState(false);\r\n    let [errorMessage , setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n        Axios.get(dataURL).then((response) => {\r\n            setSelectedProduct(response.data);\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    }, [productId]);\r\n\r\n    // changeInput\r\n    let changeInput = (event) => {\r\n        setSelectedProduct({\r\n            ...selectedProduct,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    // changeImage\r\n    let changeImage = async (event) => {\r\n        let imageFile = event.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(imageFile);\r\n        reader.addEventListener('load', () => {\r\n            if(reader.result){\r\n                setSelectedProduct({\r\n                    ...selectedProduct,\r\n                    image : reader.result\r\n                });\r\n            }\r\n            else {\r\n                alert('Error Occurred');\r\n            }\r\n        });\r\n    };\r\n\r\n    // submitProduct\r\n    let submitProduct = (event) => {\r\n        event.preventDefault();\r\n        let dataURL = `http://127.0.0.1:5000/api/products/${productId}`;\r\n        Axios.put(dataURL,selectedProduct).then((response) => {\r\n            setSubmitted(true);\r\n        }).catch((err) => {\r\n            setErrorMessage(err);\r\n        });\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                submitted ? history.push('/admin') :\r\n                    <div className=\"container mt-3\">\r\n                        <div className=\"row animated slideInLeft\">\r\n                            <div className=\"col\">\r\n                                <p className=\"h3 text-secondary\">Update a Product</p>\r\n                                <p className=\"lead\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus corporis cumque, debitis, delectus dignissimos distinctio expedita facere fugiat harum id iure, minus neque nesciunt odit officia perferendis porro tempora ullam.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row animated flipInY delay-1s\">\r\n                            <div className=\"col-md-5\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header bg-secondary text-white\">\r\n                                        <p className=\"h4\">Update Product</p>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <form onSubmit={submitProduct}>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    name=\"name\"\r\n                                                    value={selectedProduct.name}\r\n                                                    onChange={changeInput}\r\n                                                    type=\"text\" className=\"form-control\" placeholder=\"Name\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"custom-file\">\r\n                                                    <input\r\n                                                        onChange={changeImage}\r\n                                                        type=\"file\" className=\"custom-file-input\" id=\"customFile\"/>\r\n                                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">Product\r\n                                                        Image</label>\r\n                                                    {\r\n                                                        selectedProduct.image &&\r\n                                                        <img src={selectedProduct.image} alt=\"\"\r\n                                                             width=\"20\" height=\"20\"/>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    name=\"price\"\r\n                                                    value={selectedProduct.price}\r\n                                                    onChange={changeInput}\r\n                                                    type=\"number\" className=\"form-control\" placeholder=\"Price\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input\r\n                                                    name=\"qty\"\r\n                                                    value={selectedProduct.qty}\r\n                                                    onChange={changeInput}\r\n                                                    type=\"number\" className=\"form-control\" placeholder=\"qty\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                           <textarea\r\n                                               name=\"info\"\r\n                                               value={selectedProduct.info}\r\n                                               onChange={changeInput}\r\n                                               className=\"form-control\" rows=\"3\" placeholder=\"General Info\"/>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"submit\" className=\"btn btn-secondary btn-sm\"\r\n                                                       value=\"Update Product\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div style={{marginBottom : '100px'}}/>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default UpdateProduct;","import React from \"react\";\nimport './App.css';\nimport Home from \"./components/home/Home\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport {BrowserRouter as Router , Route , Switch} from 'react-router-dom';\nimport ProductList from \"./components/products/ProductList\";\nimport ProductAdmin from \"./components/products/ProductAdmin\";\nimport CreateProduct from \"./components/products/CreateProduct\";\nimport UpdateProduct from \"./components/products/UpdateProduct\";\n\nlet App = () => {\n    return(\n        <React.Fragment>\n            <Router>\n                <Navbar/>\n                <Switch>\n                    <Route exact path = \"/\" component={Home}/>\n                    <Route exact path = \"/products\" component={ProductList}/>\n                    <Route exact path = \"/admin\" component={ProductAdmin}/>\n                    <Route exact path = \"/create-product\" component={CreateProduct}/>\n                    <Route exact path = \"/update-product/:id\" component={UpdateProduct}/>\n                </Switch>\n            </Router>\n        </React.Fragment>\n    );\n};\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'mdbootstrap/css/bootstrap.css';\nimport 'mdbootstrap/css/mdb.css';\nimport './bootstrap/css/font-awesome-5.8.1.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      {/* eslint-disable-next-line no-undef */}\n\n        <App/>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}